{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","children","this","props","accountBalance","Component","Home","_jsx","src","alt","Link","to","console","log","UserProfile","userName","memberSince","LogIn","_this","call","handleChange","e","updatedUser","_objectSpread","state","user","target","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","App","logInInfo","newUser","currentUser","addCredit","credit","credits","_this2","Router","basename","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.442384c8.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, { Component } from 'react';\n\nclass AccountBalance extends Component {\n    // Display account balance\n    render() {\n        return (\n            <div>\n                Balance: {this.props.accountBalance}\n            </div>\n        );\n    }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <img src=\"https://picsum.photos/200/200\" alt=\"bank\" />\n\n                <h1>Bank of React</h1>\n\n                <Link to=\"/userProfile\">User Profile</Link>\n                <br />\n                <Link to=\"/login\">Login</Link>\n                <br />\n                <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n                <br />\n                <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n                <br /><br />\n                <AccountBalance accountBalance={this.props.accountBalance} />\n\n                {console.log(this.props)}\n            </div>\n        );\n    }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserProfile extends Component {\n    render() {\n        return (\n            <div>\n                <h1>User Profile</h1>\n\n                <div>Username: {this.props.userName}</div>\n                <div>Member Since: {this.props.memberSince}</div>\n                <br />\n                <Link to=\"/\">Return to Home</Link>\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nclass LogIn extends Component {\n    constructor(props) {  // Create and initialize state\n        super(props)\n        this.state = {\n            user: {\n                //userName: '',\n                userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n                password: ''\n            },\n            redirect: false  // Redirect property used to trigger Redirect\n        }\n    }\n\n    // When User Name input is changed, capture the new input value and update state\n    handleChange = (e) => {\n        const updatedUser = { ...this.state.user };  // Create an object for state\n        updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n        this.setState({ user: updatedUser })  // Update state with object values\n    }\n\n    // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n        this.setState({ redirect: true })  // Update state to trigger Redirect\n    }\n\n    render() {\n        // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n        if (this.state.redirect) {\n            return (<Redirect to=\"/userProfile\" />);\n        }\n\n        // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n        return (\n            <div>\n                <h1>Login</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>User Name</label>\n                        <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n                    </div>\n                    <div>\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" />\n                    </div>\n                    <button>Log In</button>\n                </form>\n                <br />\n                <Link to=\"/\">Return to Home</Link>\n            </div>\n        );\n    }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\n\n/*\nViewing the Credits Page:\n\nGIVEN I am on the Home Page\nWHEN I click on 'Credits' link/button\nTHEN I shall be redirected to the Credits Page\nAND I shall see a title of 'Credits' on the web page\n*/\n\n/*\nDisplaying List of Credits:\n\nGIVEN I am on the Credits Page\nWHEN I view the Credits display area\nTHEN I shall see all my Credits displayed in a list, including the Credits retrieved from API endpoint\nAND each Credit shall display its description, amount, and date (yyyy-mm-dd)\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\n*/\n\n/*\nAdding Credits:\n\nGIVEN I am on the Credits Page\nWHEN I enter a new Credit's description and amount\nAND WHEN I click on 'Add Credit' button\nTHEN I shall see my new Credit description and amount added to the Credits display area with the current date (yyyy-mm-dd)\nAND I shall see my Account Balance updated to reflect the addition of new Credit\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\n*/\n\n/*\nViewing the Account Balance on the Credits Page:\n\nGIVEN I am on the Credits Page\nWHEN I view the Account Balance display area\nTHEN I shall see my Account Balance displayed\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\n*/\n\n\nconst Credits = (props) => {\n    return (\n        <div>\n            <h1>Credits</h1>\n            <br />\n            <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\n\n/*\nViewing the Debits Page:\n\nGIVEN I am on the Home Page\nWHEN I click on 'Debits' link/button\nTHEN I shall be redirected to the Debits Page\nAND I shall see a title of 'Debits' on the web page\nDisplaying List of Debits:\n\nGIVEN I am on the Debits page\nWHEN I view the Debits display area\nTHEN I shall see all my Debits displayed in a list, including the Debits retrieved from API endpoint\nAND each Debit shall display its description, amount, and date (yyyy-mm-dd)\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\nAdding Debits:\n\nGIVEN I am on the Debits Page\nWHEN I enter a new Debit's description and amount\nAND WHEN I click on 'Add Debit' button\nTHEN I shall see my new Debit description and amount added to the Debits display area with the current date (yyyy-mm-dd)\nAND I shall see my Account Balance updated to reflect the addition of new Debit\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\nViewing the Account Balance on the Debits Page:\n\nGIVEN I am on the Debits Page\nWHEN I view the Account Balance display area\nTHEN I shall see my Account Balance displayed\nAND all amounts are rounded to 2 decimal places (e.g., 1234567.89)\n*/\n\nconst Debits = (props) => {\n    // Create the list of Debit items\n    let debitsView = () => {\n        const { debits } = props;\n        return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n            let date = debit.date.slice(0, 10);\n            return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n        });\n    }\n    // Render the list of Debit items and a form to input new Debit item\n    return (\n        <div>\n            <h1>Debits</h1>\n\n            {debitsView()}\n\n            <form onSubmit={props.addDebit}>\n                <input type=\"text\" name=\"description\" />\n                <input type=\"number\" name=\"amount\" />\n                <button type=\"submit\">Add Debit</button>\n            </form>\n            <br />\n            <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n\tconstructor() {  // Create and initialize state\n\t\tsuper();\n\t\tthis.state = {\n\t\t\taccountBalance: 1234567.89,\n\t\t\tcredits: [],\n\t\t\tdebits: [],\n\t\t\tcurrentUser: {\n\t\t\t\tuserName: 'Joe Smith',\n\t\t\t\tmemberSince: '11/22/23',\n\t\t\t}\n\t\t};\n\t}\n\n\t// Update state's currentUser (userName) after \"Log In\" button is clicked\n\tmockLogIn = (logInInfo) => {\n\t\tconst newUser = { ...this.state.currentUser };\n\t\tnewUser.userName = logInInfo.userName;\n\t\tthis.setState({ currentUser: newUser })\n\t}\n\n\t/*\n\t * Making the Account Balance Dynamic:\n\n\t * GIVEN I am on any page that displays the Account Balance\n\t * WHEN I view the Account Balance display area\n\t * THEN I shall see an Account Balance that accurately represents my total Debits subtracted from my total Credits\n\t * AND I shall be able to see a negative account balance if I have more Debits than Credits\n\t * AND all amounts are rounded to 2 decimal places (i.e., 1234567.89)\n\t * \n\t * How to Calculate Account Balance:\n\t * \n\t * Account Balance is the difference between total Credits amount and total Debits amount.\n\t * The mathematical formula is: Account Balance = total Credits - total Debits\n\t */\n\n\t// add credit\n\taddCredit = (credit) => {\n\t}\n\n\t// add debit\n\taddDebit = (debit) => {\n\t}\n\n\t/*\n\t * lifecycle method componentDidMount() which should include the API requests using the following endpoints:\n\t * Credits API endpoint located at https://johnnylaicode.github.io/api/credits.json\n\t * Debits API endpoint located at https://johnnylaicode.github.io/api/debits.json\n\t */\n\n\t// Create Routes and React elements to be rendered using React components\n\trender() {\n\t\t// Create React elements and pass input props to components\n\t\tconst HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n\t\tconst UserProfileComponent = () => (\n\t\t\t<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n\t\t)\n\t\tconst LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n\t\tconst CreditsComponent = () => (<Credits credits={this.state.credits} />)\n\t\tconst DebitsComponent = () => (<Debits debits={this.state.debits} />)\n\n\t\t// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\t\treturn (\n\t\t\t<Router basename=\"/assignment4-bank-of-react\">\n\t\t\t\t<div>\n\t\t\t\t\t<Route exact path=\"/\" render={HomeComponent} />\n\t\t\t\t\t<Route exact path=\"/userProfile\" render={UserProfileComponent} />\n\t\t\t\t\t<Route exact path=\"/login\" render={LogInComponent} />\n\t\t\t\t\t<Route exact path=\"/credits\" render={CreditsComponent} />\n\t\t\t\t\t<Route exact path=\"/debits\" render={DebitsComponent} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application.\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}